<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microservice.Template.Web</name>
    </assembly>
    <members>
        <member name="T:Microservice.Template.Web.Configurations.LoggerConfigs">
            <summary>
            Конфигурация логгера в DI.
            </summary>
        </member>
        <member name="M:Microservice.Template.Web.Configurations.LoggerConfigs.AddLoggerConfigs(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Добавление логгера в DI.
            </summary>
            <param name="builder">Экземпляр <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/>, используемый для конфигурирования сервисов и параметров приложения.</param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/> с добавленным Serilog.</returns>
        </member>
        <member name="T:Microservice.Template.Web.Configurations.MediatrConfigs">
            <summary>
            Конфигурация MediatR.
            </summary>
        </member>
        <member name="M:Microservice.Template.Web.Configurations.MediatrConfigs.AddMediatrConfigs(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Метод-опсширение для конфигурации MediatR.
            </summary>
            <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>с настроенным MediatR.</returns>
        </member>
        <member name="T:Microservice.Template.Web.Configurations.MiddlewareConfig">
            <summary>
            Конфигурация Middleware.
            </summary>
        </member>
        <member name="M:Microservice.Template.Web.Configurations.MiddlewareConfig.UseAppMiddlewareAndSeedDatabase(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            Конфигурирует Middleware и заполняет БД начальными данными.
            </summary>
            <param name="app">Экземпляр <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/>, к которому применяется middleware и инициализация.</param>
            <returns>
            Асинхронная задача, результатом которой является <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> с применёнными изменениями.
            </returns>
        </member>
        <member name="M:Microservice.Template.Web.Configurations.MiddlewareConfig.SeedDatabase(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            Заполняет БД начальными значениями.
            </summary>
            <param name="app">Экземпляр <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/>, к которому применяется middleware и инициализация.</param>
        </member>
        <member name="T:Microservice.Template.Web.Configurations.OptionConfigs">
            <summary>
            Настройка опций.
            </summary>
        </member>
        <member name="M:Microservice.Template.Web.Configurations.OptionConfigs.AddOptionConfigs(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Добавляет конфигурационные опции в DI-контейнер.
            </summary>
            <param name="services">Коллекция сервисов для регистрации опций.</param>
            <param name="configuration">Конфигурация приложения для чтения настроек.</param>
            <param name="logger">Логгер для записи информации о процессе конфигурации.</param>
            <param name="builder">Построитель веб-приложения для доступа к дополнительным сервисам.</param>
            <returns>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> с зарегистрированными конфигурационными опциями.
            </returns>
        </member>
        <member name="T:Microservice.Template.Web.Configurations.ServiceConfigs">
            <summary>
            Конфигурация сервисов.
            </summary>
        </member>
        <member name="M:Microservice.Template.Web.Configurations.ServiceConfigs.AddServiceConfigs(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Добавляет конфигурацию сервисов в DI-контейнер.
            </summary>
            <param name="services">Коллекция сервисов для регистрации опций.</param>
            <param name="logger">Логгер для записи информации о процессе конфигурации.</param>
            <param name="builder">Построитель веб-приложения для доступа к дополнительным сервисам.</param>
            <returns>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> с зарегистрированными конфигурационными опциями.
            </returns>
        </member>
        <member name="T:Microservice.Template.Web.WeatherForecasts.List">
            <summary>
            GET эндпоинт для получения списка прогнозов погоды.
            </summary>
            <param name="sender">MediatR sender для обработки <see cref="T:Microservice.Template.UseCases.WeatherForecast.List.ListWeatherForecastQuery"/>.</param>
        </member>
        <member name="M:Microservice.Template.Web.WeatherForecasts.List.#ctor(MediatR.ISender)">
            <summary>
            GET эндпоинт для получения списка прогнозов погоды.
            </summary>
            <param name="sender">MediatR sender для обработки <see cref="T:Microservice.Template.UseCases.WeatherForecast.List.ListWeatherForecastQuery"/>.</param>
        </member>
        <member name="M:Microservice.Template.Web.WeatherForecasts.List.Configure">
            <summary>
            Конфигурирование.
            </summary>
        </member>
        <member name="M:Microservice.Template.Web.WeatherForecasts.List.HandleAsync(System.Threading.CancellationToken)">
            <summary>
            Выполняет обработку HTTP GET запроса для получения списка прогнозов.
            </summary>
            <param name="ct">Токен для отмены асинхронной операции.</param>
            <returns>
            <see cref="T:System.Threading.Tasks.Task"/>, представляющий асинхронную операцию обработки запроса.
            </returns>
        </member>
        <member name="T:Microservice.Template.Web.WeatherForecasts.WeatherForecastListResponse">
            <summary>
            DTO для передачи списка прогнозов погоды в HTTP ответе.
            </summary>
        </member>
        <member name="P:Microservice.Template.Web.WeatherForecasts.WeatherForecastListResponse.Weathers">
            <summary>
            Список прогнозов погоды.
            </summary>
        </member>
        <member name="T:Microservice.Template.Web.WeatherForecasts.WeatherForecastRecord">
            <summary>
            DTO для передачи данных о прогнозе погоды в API ответе.
            </summary>
            <param name="Date">Дата прогноза.</param>
            <param name="TemperatureC">Температура в градусах Цельсия.</param>
            <param name="Summary">Описание погоды (может быть null).</param>
            <param name="TemperatureF">Температура в градусах Фаренгейта.</param>
        </member>
        <member name="M:Microservice.Template.Web.WeatherForecasts.WeatherForecastRecord.#ctor(System.DateOnly,System.Int32,System.String,System.Int32)">
            <summary>
            DTO для передачи данных о прогнозе погоды в API ответе.
            </summary>
            <param name="Date">Дата прогноза.</param>
            <param name="TemperatureC">Температура в градусах Цельсия.</param>
            <param name="Summary">Описание погоды (может быть null).</param>
            <param name="TemperatureF">Температура в градусах Фаренгейта.</param>
        </member>
        <member name="P:Microservice.Template.Web.WeatherForecasts.WeatherForecastRecord.Date">
            <summary>Дата прогноза.</summary>
        </member>
        <member name="P:Microservice.Template.Web.WeatherForecasts.WeatherForecastRecord.TemperatureC">
            <summary>Температура в градусах Цельсия.</summary>
        </member>
        <member name="P:Microservice.Template.Web.WeatherForecasts.WeatherForecastRecord.Summary">
            <summary>Описание погоды (может быть null).</summary>
        </member>
        <member name="P:Microservice.Template.Web.WeatherForecasts.WeatherForecastRecord.TemperatureF">
            <summary>Температура в градусах Фаренгейта.</summary>
        </member>
    </members>
</doc>
